What happens when you initialize a repository? Why do you need to do it?
R/I create a new folder called .git That folder is empty at first because git doesn't create a first commitby itself
instead i have tocreate the first commit. Anotherthng to remember, that folder is invisible to the user (because it
has a dot at the beggining).
I have to initialize a repositorybecause is there where all the history of my files will be stocked

How is the staging area different from the working directory and the repository? What value do you think it offers?
R/the staging area is an intermediate place, like a neutral place but from were i can go a commit, i'm halfway from
the commit. The value it offers is that i can choose wich file i want to make a commit on and i don't do the commit
directly but i go to lika a working room with my file and then if i really decide to commit i can do it


How can you use the staging area to make sure you have one commit per logical change?
R/i should add only one file to the staging area and make a commit as soon as i have a logical change

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
R/situations like when i want to try a variant of the original project, to make it in another language or level, to 
try an idea. Branches help in those cases because i can keepthe original project as it is, because i need it or i just
want to keep it, so working on branches i can have many options and variants of my project

How do the diagrams help you visualize the branch structure?
R/with the diagrams i can see wich commits are reachable from each branch. who's the father of each commit

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
R/When we merge two branches together, the new branche will have the commits of both branches. The representation helps
us to see the different commits of each brach, the point they separated,they point were they merged and we can also see
if there are other branches

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
R/Pros of automatic: i save time
cons: if i always had automaticmergins i could have inconsistency or git can take wrong decision and erase code i wanted
to keep or keep code i wanted to erase 